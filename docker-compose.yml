services:
  postgres_db:
    image: postgis/postgis:latest
    container_name: PostgresCont
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: worldtraveler
    ports:
      - "5432:5432"
    expose:
      - '5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d worldtraveler" ]
      interval: 10s
      timeout: 5s
      retries: 3


  geoserver:
    image: oscarfonts/geoserver:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres_db
    environment:
      - GEOSERVER_ADMIN_PASSWORD=geoserver

  backend:
    build:
      context: ./
      dockerfile: Dockerfile-backend
    ports:
      - "8085:8085"
    depends_on:
      - geoserver
      - postgres_db
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8085/actuator/health || exit 1
      interval: 10s
      retries: 5
      start_period: 6s
      timeout: 10s
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/worldtraveler
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: geoserver
      GEOSERVER_URL: http://geoserver:8080/geoserver

  frontend:
    build:
      context: ./
      dockerfile: Dockerfile-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local